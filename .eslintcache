[{"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"2","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"3","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"4","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"5","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"6","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"7","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"8","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"9","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"10","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\redux\\reducer.js":"11","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"12","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"13","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"14"},{"size":696,"mtime":1640155860338,"results":"15","hashOfConfig":"16"},{"size":2420,"mtime":1640941863389,"results":"17","hashOfConfig":"16"},{"size":982,"mtime":1640205223200,"results":"18","hashOfConfig":"16"},{"size":7554,"mtime":1640991125124,"results":"19","hashOfConfig":"16"},{"size":1054,"mtime":1640164383660,"results":"20","hashOfConfig":"16"},{"size":13040,"mtime":1640986844257,"results":"21","hashOfConfig":"16"},{"size":1242,"mtime":1640164359104,"results":"22","hashOfConfig":"16"},{"size":4490,"mtime":1640727836903,"results":"23","hashOfConfig":"16"},{"size":5977,"mtime":1640770332584,"results":"24","hashOfConfig":"16"},{"size":4243,"mtime":1640164377093,"results":"25","hashOfConfig":"16"},{"size":418,"mtime":1640941121367,"results":"26","hashOfConfig":"16"},{"size":613,"mtime":1640941202679,"results":"27","hashOfConfig":"16"},{"size":3003,"mtime":1640159595055,"results":"28","hashOfConfig":"16"},{"size":303,"mtime":1640164389178,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"snsaun",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["60","61","62"],"import React, { Component } from 'react';\r\nimport { Button, Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Label, Modal, ModalHeader } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen: false,\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleBlur = field => () => {\r\n        //setState is used to change the \"touched\" object\r\n        this.setState({\r\n            //Instead of changing the object as a whole, we are only updating the changed properties inside the object\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        //Stores property of event target for easy access\r\n        const target = event.target;\r\n        //Stores property of event name for easy access\r\n        const name = target.name;\r\n        //Stores property of target type, either checked if checkbox type, or the value if not a checkbox type\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        //Set the property based on the target's name, dynamically\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        //Use JSON.stringify to turn JavaScript object data into a string\r\n        console.log('Current state is: ' + JSON.stringify(values));\r\n        alert('Current state is: ' + JSON.stringify(values));\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Button outline className=\"fa-lg fa fa-pencil\" onClick={this.toggleModal}>Submit Comment</Button>\r\n                </div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                        <div className='form-group'>\r\n                            <Label htmlFor=\"rating\">Rating:</Label>\r\n                            <Control.select model=\".rating\" name=\"rating\" id=\"rating\"\r\n                                className=\"form-control\">\r\n                                <option>Select a rating....</option>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                            </Control.select>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <Label htmlFor=\"author\">Your Name:</Label>\r\n                            <Control.text model=\".author\" name=\"author\" id=\"author\" placeholder=\"Enter your name here\" className=\"form-control\" validators={{\r\n                                required,\r\n                                minLength: minLength(2),\r\n                                maxLength: maxLength(15)\r\n                            }}\r\n                            />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".author\"\r\n                                show=\"touched\"\r\n                                component=\"div\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be at least 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                            />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <Label htmlFor=\"text\" rows=\"6\">Comment:</Label>\r\n                        <Control.textarea model=\".text\" name=\"text\" id=\"text\"\r\n                            className=\"form-control\">\r\n                        </Control.textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </LocalForm>\r\n            </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderCampsite({ campsite }) {\r\n    return (\r\n        <div className='col-md-5 m-1'>\r\n            <Card>\r\n                <CardImg top src={campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RenderComments({ comments }) {\r\n    if (comments) {\r\n        return (\r\n            <div className='col-md-5 m-1'>\r\n                <h4>Comments</h4>\r\n                {comments.map(comment => {\r\n                    return (\r\n                        <div key={comment.id}>\r\n                            <p>\r\n                                {comment.text}\r\n                                <br />\r\n                                -- {comment.author},{' '}\r\n                                {new Intl.DateTimeFormat('en-US', {\r\n                                    year: 'numeric',\r\n                                    month: 'short',\r\n                                    day: '2-digit'\r\n                                }).format(new Date(Date.parse(comment.date)))}\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <div>\r\n                    <CommentForm />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return <div />\r\n}\r\n\r\nfunction CampsiteInfo(props) {\r\n    if (props.campsite) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/directory'>Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>\r\n                            {props.campsite.name}\r\n                        </h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments comments={props.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <div />\r\n}\r\n\r\nexport default CampsiteInfo\r\n","D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["63","64","65","66","67","68","69"],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\redux\\reducer.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],["70","71"],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"D:\\NuCamp\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],{"ruleId":"72","severity":1,"message":"73","line":76,"column":29,"nodeType":"74","endLine":77,"endColumn":58},{"ruleId":"72","severity":1,"message":"75","line":88,"column":29,"nodeType":"74","endLine":93,"endColumn":31},{"ruleId":"72","severity":1,"message":"76","line":108,"column":25,"nodeType":"74","endLine":109,"endColumn":54},{"ruleId":"72","severity":1,"message":"75","line":127,"column":37,"nodeType":"74","endLine":135,"endColumn":39},{"ruleId":"72","severity":1,"message":"75","line":152,"column":37,"nodeType":"74","endLine":160,"endColumn":39},{"ruleId":"72","severity":1,"message":"75","line":177,"column":37,"nodeType":"74","endLine":186,"endColumn":39},{"ruleId":"72","severity":1,"message":"75","line":204,"column":37,"nodeType":"74","endLine":211,"endColumn":39},{"ruleId":"72","severity":1,"message":"77","line":228,"column":45,"nodeType":"74","endLine":232,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":238,"column":37,"nodeType":"74","endLine":239,"endColumn":66},{"ruleId":"72","severity":1,"message":"76","line":248,"column":37,"nodeType":"74","endLine":251,"endColumn":39},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-global-assign","no-unsafe-negation"]